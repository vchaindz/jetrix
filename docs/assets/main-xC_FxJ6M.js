(function(){const e=document.createElement("link").relList;if(e&&e.supports&&e.supports("modulepreload"))return;for(const i of document.querySelectorAll('link[rel="modulepreload"]'))s(i);new MutationObserver(i=>{for(const a of i)if(a.type==="childList")for(const r of a.addedNodes)r.tagName==="LINK"&&r.rel==="modulepreload"&&s(r)}).observe(document,{childList:!0,subtree:!0});function t(i){const a={};return i.integrity&&(a.integrity=i.integrity),i.referrerPolicy&&(a.referrerPolicy=i.referrerPolicy),i.crossOrigin==="use-credentials"?a.credentials="include":i.crossOrigin==="anonymous"?a.credentials="omit":a.credentials="same-origin",a}function s(i){if(i.ep)return;i.ep=!0;const a=t(i);fetch(i.href,a)}})();class x{constructor(e){this.game=e,this.canvas=null,this.ctx=null,this.nextCanvas=null,this.nextCtx=null,this.holdCanvas=null,this.holdCtx=null,this.cellSize=30,this.animationFrame=0,this.lineClearAnimation=null,this.particles=[]}initialize(){this.canvas=document.getElementById("gameCanvas"),this.ctx=this.canvas.getContext("2d"),this.nextCanvas=document.getElementById("nextCanvas"),this.nextCtx=this.nextCanvas.getContext("2d"),this.holdCanvas=document.getElementById("holdCanvas"),this.holdCtx=this.holdCanvas.getContext("2d"),[this.ctx,this.nextCtx,this.holdCtx].forEach(e=>{e.imageSmoothingEnabled=!1}),this.initParticles()}initParticles(){for(let e=0;e<20;e++)this.particles.push({x:Math.random()*this.canvas.width,y:Math.random()*this.canvas.height,vx:(Math.random()-.5)*.5,vy:Math.random()*.5+.5,size:Math.random()*2+1,opacity:Math.random()*.5+.1})}render(){this.clearCanvas(),this.drawGrid(),this.drawBoard(),this.drawGhostPiece(),this.drawCurrentPiece(),this.drawParticles(),this.renderNext(),this.renderHold(),this.animationFrame++,this.lineClearAnimation&&this.drawLineClearAnimation()}clearCanvas(){const e=this.ctx.createLinearGradient(0,0,0,this.canvas.height);e.addColorStop(0,"#0a0a0a"),e.addColorStop(1,"#1a0a2a"),this.ctx.fillStyle=e,this.ctx.fillRect(0,0,this.canvas.width,this.canvas.height)}drawGrid(){this.ctx.strokeStyle="rgba(255, 255, 255, 0.05)",this.ctx.lineWidth=1;for(let e=0;e<=10;e++)this.ctx.beginPath(),this.ctx.moveTo(e*this.cellSize,0),this.ctx.lineTo(e*this.cellSize,this.canvas.height),this.ctx.stroke();for(let e=0;e<=20;e++)this.ctx.beginPath(),this.ctx.moveTo(0,e*this.cellSize),this.ctx.lineTo(this.canvas.width,e*this.cellSize),this.ctx.stroke()}drawBoard(){const e=this.game.board;for(let t=0;t<e.length;t++)for(let s=0;s<e[t].length;s++)e[t][s]&&this.drawCell(s,t,e[t][s],1)}drawCurrentPiece(){const e=this.game.currentPiece;if(!e)return;const t=e.shape;for(let s=0;s<t.length;s++)for(let i=0;i<t[s].length;i++)t[s][i]&&this.drawCell(e.x+i,e.y+s,e.color,1)}drawGhostPiece(){const e=this.game.getGhostPosition();if(!e)return;const t=e.shape;for(let s=0;s<t.length;s++)for(let i=0;i<t[s].length;i++)t[s][i]&&this.drawCell(e.x+i,e.y+s,e.color,.2)}drawCell(e,t,s,i=1){const a=e*this.cellSize,r=t*this.cellSize,o=this.cellSize,l=1,d=this.ctx.createLinearGradient(a,r,a+o,r+o),c=this.hexToRgb(s);d.addColorStop(0,`rgba(${c.r}, ${c.g}, ${c.b}, ${i})`),d.addColorStop(1,`rgba(${c.r*.6}, ${c.g*.6}, ${c.b*.6}, ${i})`),this.ctx.fillStyle=d,this.ctx.fillRect(a+l,r+l,o-l*2,o-l*2),i>.5&&(this.ctx.shadowColor=s,this.ctx.shadowBlur=10,this.ctx.strokeStyle=s,this.ctx.lineWidth=1,this.ctx.strokeRect(a+l,r+l,o-l*2,o-l*2),this.ctx.shadowBlur=0),this.ctx.strokeStyle=`rgba(255, 255, 255, ${i*.3})`,this.ctx.lineWidth=1,this.ctx.strokeRect(a+l+2,r+l+2,o-l*2-4,o-l*2-4)}renderNext(){const e=this.nextCtx.createLinearGradient(0,0,0,this.nextCanvas.height);e.addColorStop(0,"rgba(10, 10, 10, 0.8)"),e.addColorStop(1,"rgba(26, 10, 42, 0.8)"),this.nextCtx.fillStyle=e,this.nextCtx.fillRect(0,0,this.nextCanvas.width,this.nextCanvas.height);const t=this.game.nextPieces,s={I:{shape:[[0,0,0,0],[1,1,1,1],[0,0,0,0],[0,0,0,0]],color:"#00ffff"},O:{shape:[[1,1],[1,1]],color:"#ffff00"},T:{shape:[[0,1,0],[1,1,1],[0,0,0]],color:"#ff00ff"},S:{shape:[[0,1,1],[1,1,0],[0,0,0]],color:"#00ff00"},Z:{shape:[[1,1,0],[0,1,1],[0,0,0]],color:"#ff0000"},J:{shape:[[1,0,0],[1,1,1],[0,0,0]],color:"#0000ff"},L:{shape:[[0,0,1],[1,1,1],[0,0,0]],color:"#ff8800"}};for(let i=0;i<Math.min(3,t.length);i++){const a=s[t[i]];a&&this.drawPiecePreview(this.nextCtx,a.shape,a.color,60,40+i*120,20)}}renderHold(){const e=this.holdCtx.createLinearGradient(0,0,0,this.holdCanvas.height);if(e.addColorStop(0,"rgba(10, 10, 10, 0.8)"),e.addColorStop(1,"rgba(26, 10, 42, 0.8)"),this.holdCtx.fillStyle=e,this.holdCtx.fillRect(0,0,this.holdCanvas.width,this.holdCanvas.height),this.game.holdPiece){const s={I:{shape:[[0,0,0,0],[1,1,1,1],[0,0,0,0],[0,0,0,0]],color:"#00ffff"},O:{shape:[[1,1],[1,1]],color:"#ffff00"},T:{shape:[[0,1,0],[1,1,1],[0,0,0]],color:"#ff00ff"},S:{shape:[[0,1,1],[1,1,0],[0,0,0]],color:"#00ff00"},Z:{shape:[[1,1,0],[0,1,1],[0,0,0]],color:"#ff0000"},J:{shape:[[1,0,0],[1,1,1],[0,0,0]],color:"#0000ff"},L:{shape:[[0,0,1],[1,1,1],[0,0,0]],color:"#ff8800"}}[this.game.holdPiece];if(s){const i=this.game.canHold?1:.3;this.drawPiecePreview(this.holdCtx,s.shape,s.color,60,60,20,i)}}}drawPiecePreview(e,t,s,i,a,r,o=1){const l=t[0].length,d=t.length,c=i-l*r/2,y=a-d*r/2;for(let f=0;f<d;f++)for(let p=0;p<l;p++)if(t[f][p]){const g=c+p*r,n=y+f*r,P=e.createLinearGradient(g,n,g+r,n+r),u=this.hexToRgb(s);P.addColorStop(0,`rgba(${u.r}, ${u.g}, ${u.b}, ${o})`),P.addColorStop(1,`rgba(${u.r*.6}, ${u.g*.6}, ${u.b*.6}, ${o})`),e.fillStyle=P,e.fillRect(g+1,n+1,r-2,r-2),e.strokeStyle=`rgba(255, 255, 255, ${o*.3})`,e.lineWidth=1,e.strokeRect(g+1,n+1,r-2,r-2)}}drawParticles(){this.ctx.save();for(let e of this.particles)e.x+=e.vx,e.y+=e.vy,e.y>this.canvas.height&&(e.y=-10,e.x=Math.random()*this.canvas.width),e.x<0&&(e.x=this.canvas.width),e.x>this.canvas.width&&(e.x=0),this.ctx.fillStyle=`rgba(255, 255, 255, ${e.opacity})`,this.ctx.beginPath(),this.ctx.arc(e.x,e.y,e.size,0,Math.PI*2),this.ctx.fill();this.ctx.restore()}animateLineClear(e){this.lineClearAnimation={lines:e,frame:0,maxFrames:30}}drawLineClearAnimation(){const e=this.lineClearAnimation,t=e.frame/e.maxFrames;if(e.frame<10&&(this.ctx.fillStyle=`rgba(255, 255, 255, ${.3*(1-t*3)})`,this.ctx.fillRect(0,0,this.canvas.width,this.canvas.height)),e.frame===0)for(let s=0;s<e.lines*10;s++)this.particles.push({x:Math.random()*this.canvas.width,y:this.canvas.height*.7,vx:(Math.random()-.5)*5,vy:-Math.random()*5-2,size:Math.random()*3+2,opacity:1,lifetime:30});e.frame++,e.frame>=e.maxFrames&&(this.lineClearAnimation=null),this.particles=this.particles.filter(s=>!s.lifetime||--s.lifetime>0)}hexToRgb(e){const t=/^#?([a-f\d]{2})([a-f\d]{2})([a-f\d]{2})$/i.exec(e);return t?{r:parseInt(t[1],16),g:parseInt(t[2],16),b:parseInt(t[3],16)}:{r:255,g:255,b:255}}}class w{constructor(e){this.game=e,this.keys={},this.keyTimers={},this.dasTimer=null,this.arrTimer=null,this.touchStartX=null,this.touchStartY=null,this.touchStartTime=null}initialize(){this.setupKeyboardControls(),this.setupTouchControls(),this.setupGamepadControls()}setupKeyboardControls(){document.addEventListener("keydown",e=>this.handleKeyDown(e)),document.addEventListener("keyup",e=>this.handleKeyUp(e))}handleKeyDown(e){if(["ArrowLeft","ArrowRight","ArrowDown","ArrowUp"," ","c","C","Escape"].includes(e.key)&&e.preventDefault(),!this.keys[e.key])switch(this.keys[e.key]=!0,e.key){case"ArrowLeft":this.handleMoveLeft(),this.startDAS("left");break;case"ArrowRight":this.handleMoveRight(),this.startDAS("right");break;case"ArrowDown":this.handleSoftDrop();break;case"ArrowUp":this.handleRotate();break;case"z":case"Z":this.handleRotate(!1);break;case" ":this.handleHardDrop();break;case"c":case"C":this.handleHold();break;case"Escape":this.handlePause();break;case"Enter":this.game.isGameOver&&this.game.startGame();break}}handleKeyUp(e){delete this.keys[e.key],(e.key==="ArrowLeft"||e.key==="ArrowRight")&&this.stopDAS(),e.key==="ArrowDown"&&this.stopSoftDrop()}handleMoveLeft(){!this.game.isPlaying||this.game.isPaused||(this.game.moveLeft(),this.game.playSound("move"))}handleMoveRight(){!this.game.isPlaying||this.game.isPaused||(this.game.moveRight(),this.game.playSound("move"))}handleRotate(e=!0){!this.game.isPlaying||this.game.isPaused||this.game.rotate(e)&&this.game.playSound("rotate")}handleSoftDrop(){!this.game.isPlaying||this.game.isPaused||(this.game.moveDown(),this.keyTimers.softDrop||(this.keyTimers.softDrop=setInterval(()=>{this.keys.ArrowDown&&!this.game.isPaused&&this.game.moveDown()},50)))}stopSoftDrop(){this.keyTimers.softDrop&&(clearInterval(this.keyTimers.softDrop),this.keyTimers.softDrop=null)}handleHardDrop(){!this.game.isPlaying||this.game.isPaused||this.game.hardDrop()}handleHold(){!this.game.isPlaying||this.game.isPaused||(this.game.hold(),this.game.playSound("move"))}handlePause(){this.game.isPlaying&&(this.game.isPaused?this.game.resume():this.game.pause())}startDAS(e){this.stopDAS(),this.dasTimer=setTimeout(()=>{this.arrTimer=setInterval(()=>{this.game.isPaused||(e==="left"&&this.keys.ArrowLeft?this.game.moveLeft():e==="right"&&this.keys.ArrowRight?this.game.moveRight():this.stopDAS())},30)},150)}stopDAS(){this.dasTimer&&(clearTimeout(this.dasTimer),this.dasTimer=null),this.arrTimer&&(clearInterval(this.arrTimer),this.arrTimer=null)}setupTouchControls(){const e=document.getElementById("gameCanvas");e.addEventListener("touchstart",t=>this.handleTouchStart(t),{passive:!1}),e.addEventListener("touchmove",t=>this.handleTouchMove(t),{passive:!1}),e.addEventListener("touchend",t=>this.handleTouchEnd(t),{passive:!1})}handleTouchStart(e){e.preventDefault();const t=e.touches[0];this.touchStartX=t.clientX,this.touchStartY=t.clientY,this.touchStartTime=Date.now()}handleTouchMove(e){if(e.preventDefault(),!this.touchStartX||!this.touchStartY)return;const t=e.touches[0],s=t.clientX-this.touchStartX,i=t.clientY-this.touchStartY,a=30;Math.abs(s)>a&&Math.abs(s)>Math.abs(i)&&(s>0?this.handleMoveRight():this.handleMoveLeft(),this.touchStartX=t.clientX),i>a&&Math.abs(i)>Math.abs(s)&&(this.handleSoftDrop(),this.touchStartY=t.clientY)}handleTouchEnd(e){if(e.preventDefault(),!this.touchStartTime)return;const t=Date.now()-this.touchStartTime,s=e.changedTouches[0],i=Math.abs(s.clientX-this.touchStartX),a=Math.abs(s.clientY-this.touchStartY);t<200&&i<10&&a<10&&this.handleRotate(),t<200&&a>50&&s.clientY-this.touchStartY<-50&&this.handleHardDrop(),this.touchStartX=null,this.touchStartY=null,this.touchStartTime=null,this.stopSoftDrop()}setupGamepadControls(){this.gamepadIndex=null,this.gamepadButtons={},window.addEventListener("gamepadconnected",e=>{console.log("Gamepad connected:",e.gamepad.id),this.gamepadIndex=e.gamepad.index}),window.addEventListener("gamepaddisconnected",e=>{console.log("Gamepad disconnected:",e.gamepad.id),this.gamepadIndex===e.gamepad.index&&(this.gamepadIndex=null)}),this.pollGamepad()}pollGamepad(){var e,t,s,i,a,r,o,l,d,c,y,f,p,g;if(this.gamepadIndex!==null){const n=navigator.getGamepads()[this.gamepadIndex];if(n){const P=((e=n.buttons[14])==null?void 0:e.pressed)||n.axes[0]<-.5,u=((t=n.buttons[15])==null?void 0:t.pressed)||n.axes[0]>.5,b=((s=n.buttons[13])==null?void 0:s.pressed)||n.axes[1]>.5;(i=n.buttons[12])!=null&&i.pressed||n.axes[1]<-.5,P&&!this.gamepadButtons.left?(this.handleMoveLeft(),this.gamepadButtons.left=!0):P||(this.gamepadButtons.left=!1),u&&!this.gamepadButtons.right?(this.handleMoveRight(),this.gamepadButtons.right=!0):u||(this.gamepadButtons.right=!1),b&&!this.gamepadButtons.down?(this.handleSoftDrop(),this.gamepadButtons.down=!0):b||(this.gamepadButtons.down=!1,this.stopSoftDrop()),(a=n.buttons[0])!=null&&a.pressed&&!this.gamepadButtons.a?(this.handleRotate(),this.gamepadButtons.a=!0):(r=n.buttons[0])!=null&&r.pressed||(this.gamepadButtons.a=!1),(o=n.buttons[1])!=null&&o.pressed&&!this.gamepadButtons.b?(this.handleRotate(!1),this.gamepadButtons.b=!0):(l=n.buttons[1])!=null&&l.pressed||(this.gamepadButtons.b=!1),(d=n.buttons[2])!=null&&d.pressed&&!this.gamepadButtons.x?(this.handleHold(),this.gamepadButtons.x=!0):(c=n.buttons[2])!=null&&c.pressed||(this.gamepadButtons.x=!1),(y=n.buttons[3])!=null&&y.pressed&&!this.gamepadButtons.y?(this.handleHardDrop(),this.gamepadButtons.y=!0):(f=n.buttons[3])!=null&&f.pressed||(this.gamepadButtons.y=!1),(p=n.buttons[9])!=null&&p.pressed&&!this.gamepadButtons.start?(this.handlePause(),this.gamepadButtons.start=!0):(g=n.buttons[9])!=null&&g.pressed||(this.gamepadButtons.start=!1)}}requestAnimationFrame(()=>this.pollGamepad())}}class S{constructor(){this.db=null,this.playerId=null,this.leaderboardCache=new Map,this.updateCallbacks=new Set}async initialize(){this.playerId=localStorage.getItem("playerId"),this.playerId||(this.playerId=this.generatePlayerId(),localStorage.setItem("playerId",this.playerId)),console.log("Initializing highscore manager with localStorage"),this.useFallbackStorage(),await this.loadMiniLeaderboard(),console.log("Highscore manager initialized successfully")}generatePlayerId(){return"player_"+Math.random().toString(36).substr(2,9)+Date.now().toString(36)}async submitScore(e){return this.submitScoreFallback(e)}async getPersonalBest(e){return this.getPersonalBestFallback(e)}async getRank(e,t){return this.getLocalScores().filter(a=>a.gameMode===t&&a.score>e).length+1}async getLeaderboard(e="normal",t="all",s=100){const i=`${e}-${t}-${s}`;if(this.leaderboardCache.has(i)){const r=this.leaderboardCache.get(i);if(Date.now()-r.timestamp<3e4)return r.data}const a=this.getLeaderboardFallback(e,t,s);return this.leaderboardCache.set(i,{data:a,timestamp:Date.now()}),a}getTimeCutoff(e){const t=Date.now();switch(e){case"daily":return t-24*60*60*1e3;case"weekly":return t-7*24*60*60*1e3;case"monthly":return t-30*24*60*60*1e3;default:return 0}}async loadMiniLeaderboard(){const e=await this.getLeaderboard("normal","all",5);this.updateMiniLeaderboard(e)}updateMiniLeaderboard(e){const t=document.getElementById("miniLeaderboard");if(t){if(e.length===0){t.innerHTML='<div class="no-scores">No scores yet</div>';return}t.innerHTML=e.map(s=>`
            <div class="mini-score-entry ${s.isCurrentPlayer?"current-player":""}">
                <span class="rank">#${s.rank}</span>
                <span class="name">${this.truncateName(s.playerName,10)}</span>
                <span class="score">${s.score.toLocaleString()}</span>
            </div>
        `).join("")}}async displayLeaderboard(){document.getElementById("leaderboardContent")&&(this.setupLeaderboardTabs(),await this.loadLeaderboardContent("normal","all"))}setupLeaderboardTabs(){document.querySelectorAll(".tab-btn").forEach(e=>{e.addEventListener("click",async t=>{var a;document.querySelectorAll(".tab-btn").forEach(r=>r.classList.remove("active")),t.target.classList.add("active");const s=t.target.dataset.range,i=((a=document.querySelector(".mode-btn.active"))==null?void 0:a.dataset.mode)||"normal";await this.loadLeaderboardContent(i,s)})}),document.querySelectorAll(".mode-btn").forEach(e=>{e.addEventListener("click",async t=>{var a;document.querySelectorAll(".mode-btn").forEach(r=>r.classList.remove("active")),t.target.classList.add("active");const s=t.target.dataset.mode,i=((a=document.querySelector(".tab-btn.active"))==null?void 0:a.dataset.range)||"all";await this.loadLeaderboardContent(s,i)})})}async loadLeaderboardContent(e,t){const s=document.getElementById("leaderboardContent");if(!s)return;s.innerHTML='<div class="loading">Loading scores...</div>';const i=await this.getLeaderboard(e,t,50);if(i.length===0){s.innerHTML='<div class="no-scores">No scores recorded yet. Be the first!</div>';return}s.innerHTML=`
            <div class="leaderboard-table">
                <div class="leaderboard-header">
                    <span class="col-rank">RANK</span>
                    <span class="col-name">PLAYER</span>
                    <span class="col-score">SCORE</span>
                    <span class="col-level">LEVEL</span>
                    <span class="col-lines">LINES</span>
                    <span class="col-date">DATE</span>
                </div>
                <div class="leaderboard-entries">
                    ${i.map(a=>this.renderLeaderboardEntry(a)).join("")}
                </div>
            </div>
        `}renderLeaderboardEntry(e){const t=new Date(e.timestamp),s=t.toLocaleDateString("en-US",{month:"short",day:"numeric",year:t.getFullYear()!==new Date().getFullYear()?"numeric":void 0});return`
            <div class="leaderboard-entry ${e.isCurrentPlayer?"current-player":""}">
                <span class="col-rank">
                    ${e.rank<=3?this.getRankMedal(e.rank):""}
                    #${e.rank}
                </span>
                <span class="col-name">${this.truncateName(e.playerName,15)}</span>
                <span class="col-score">${e.score.toLocaleString()}</span>
                <span class="col-level">${e.level}</span>
                <span class="col-lines">${e.lines}</span>
                <span class="col-date">${s}</span>
            </div>
        `}getRankMedal(e){switch(e){case 1:return"🥇";case 2:return"🥈";case 3:return"🥉";default:return""}}truncateName(e,t){return e.length<=t?e:e.substr(0,t-3)+"..."}subscribe(e){return this.updateCallbacks.add(e),()=>this.updateCallbacks.delete(e)}notifySubscribers(){this.updateCallbacks.forEach(e=>e())}useFallbackStorage(){console.log("Using localStorage fallback for highscores"),this.db=null}submitScoreFallback(e){var i;const t=this.getLocalScores();t.push({...e,playerId:this.playerId,timestamp:Date.now()}),t.sort((a,r)=>r.score-a.score),t.splice(100),localStorage.setItem("jetrix_scores",JSON.stringify(t));const s=t.findIndex(a=>a.playerId===this.playerId&&a.score===e.score)+1;return{isHighscore:s<=100,rank:s,personalBest:((i=this.getPersonalBestFallback(e.gameMode))==null?void 0:i.score)||0}}getPersonalBestFallback(e){const s=this.getLocalScores().filter(i=>i.playerId===this.playerId&&i.gameMode===e);return s.length===0?null:s.reduce((i,a)=>a.score>i.score?a:i)}getLeaderboardFallback(e,t,s){const i=this.getLocalScores(),a=this.getTimeCutoff(t);return i.filter(o=>o.gameMode===e&&o.timestamp>=a).slice(0,s).map((o,l)=>({rank:l+1,playerId:o.playerId,playerName:o.playerName||"Anonymous",score:o.score,level:o.level||1,lines:o.lines||0,timestamp:o.timestamp,isCurrentPlayer:o.playerId===this.playerId}))}getLocalScores(){try{const e=localStorage.getItem("jetrix_scores");return e?JSON.parse(e):[]}catch{return[]}}}const v={I:{shape:[[0,0,0,0],[1,1,1,1],[0,0,0,0],[0,0,0,0]],color:"#00ffff"},O:{shape:[[1,1],[1,1]],color:"#ffff00"},T:{shape:[[0,1,0],[1,1,1],[0,0,0]],color:"#ff00ff"},S:{shape:[[0,1,1],[1,1,0],[0,0,0]],color:"#00ff00"},Z:{shape:[[1,1,0],[0,1,1],[0,0,0]],color:"#ff0000"},J:{shape:[[1,0,0],[1,1,1],[0,0,0]],color:"#0000ff"},L:{shape:[[0,0,1],[1,1,1],[0,0,0]],color:"#ff8800"}},h={BOARD_WIDTH:10,BOARD_HEIGHT:20,LOCK_DELAY:500,POINTS:{SINGLE:100,DOUBLE:300,TRIPLE:500,TETRIS:800,SOFT_DROP:1,HARD_DROP:2,COMBO_MULTIPLIER:50},DIFFICULTY:{easy:{speed:1e3,levelSpeed:80},normal:{speed:800,levelSpeed:60},hard:{speed:600,levelSpeed:40},extreme:{speed:400,levelSpeed:20}}};class I{constructor(){this.board=[],this.currentPiece=null,this.nextPieces=[],this.holdPiece=null,this.canHold=!0,this.score=0,this.level=1,this.lines=0,this.combo=0,this.gameMode="normal",this.isPlaying=!1,this.isPaused=!1,this.isGameOver=!1,this.dropTimer=0,this.lockTimer=0,this.bag=[],this.renderer=null,this.controls=null,this.highscores=null,this.playerName="Player",this.stats={piecesPlaced:0,tSpins:0,maxCombo:0,startTime:0,endTime:0}}async initialize(){this.resetBoard(),this.renderer=new x(this),this.renderer.initialize(),this.controls=new w(this),this.controls.initialize(),this.highscores=new S,await this.highscores.initialize(),this.setupUI(),this.showStartModal()}resetBoard(){this.board=Array(h.BOARD_HEIGHT).fill(null).map(()=>Array(h.BOARD_WIDTH).fill(0))}setupUI(){var i,a,r,o,l;const e=document.getElementById("startGame");e==null||e.addEventListener("click",()=>this.startGame()),document.querySelectorAll(".btn-difficulty").forEach(d=>{d.addEventListener("click",c=>{document.querySelectorAll(".btn-difficulty").forEach(y=>y.classList.remove("active")),c.target.classList.add("active"),this.gameMode=c.target.dataset.mode})});const t=document.getElementById("playerName");t==null||t.addEventListener("change",d=>{this.playerName=d.target.value||"Player",localStorage.setItem("playerName",this.playerName)});const s=localStorage.getItem("playerName");s&&t&&(t.value=s,this.playerName=s),(i=document.getElementById("viewHighscores"))==null||i.addEventListener("click",()=>{this.showHighscoresModal()}),(a=document.getElementById("closeHighscores"))==null||a.addEventListener("click",()=>{document.getElementById("highscoreModal").style.display="none"}),(r=document.getElementById("playAgain"))==null||r.addEventListener("click",()=>{this.hideGameOverModal(),this.startGame()}),(o=document.getElementById("mainMenu"))==null||o.addEventListener("click",()=>{this.hideGameOverModal(),this.showStartModal()}),(l=document.getElementById("overlayButton"))==null||l.addEventListener("click",()=>{this.isPaused&&this.resume()})}showStartModal(){document.getElementById("startModal").style.display="flex",document.getElementById("gameOverModal").style.display="none",document.getElementById("highscoreModal").style.display="none"}hideStartModal(){document.getElementById("startModal").style.display="none"}showHighscoresModal(){document.getElementById("highscoreModal").style.display="flex",this.highscores.displayLeaderboard()}showGameOverModal(){const e=document.getElementById("gameOverModal");document.getElementById("finalScore").textContent=this.score.toLocaleString(),document.getElementById("finalLevel").textContent=this.level,document.getElementById("finalLines").textContent=this.lines,e.style.display="flex"}hideGameOverModal(){document.getElementById("gameOverModal").style.display="none"}async startGame(){this.resetBoard(),this.score=0,this.level=1,this.lines=0,this.combo=0,this.isPlaying=!0,this.isPaused=!1,this.isGameOver=!1,this.holdPiece=null,this.canHold=!0,this.bag=[],this.nextPieces=[],this.stats={piecesPlaced:0,tSpins:0,maxCombo:0,startTime:Date.now(),endTime:0},this.hideStartModal(),this.hideGameOverModal(),this.updateDisplay();for(let e=0;e<3;e++)this.nextPieces.push(this.getNextFromBag());this.spawnPiece(),this.gameLoop()}gameLoop(e=0){if(!(!this.isPlaying||this.isGameOver)){if(!this.isPaused){const t=this.getDropSpeed();this.dropTimer+=16.67,this.dropTimer>=t&&(this.dropTimer=0,this.moveDown()?this.lockTimer=0:(this.lockTimer+=t,this.lockTimer>=h.LOCK_DELAY&&this.lockPiece()))}this.renderer.render(),requestAnimationFrame(t=>this.gameLoop(t))}}getDropSpeed(){const e=h.DIFFICULTY[this.gameMode],t=e.speed,s=e.levelSpeed*(this.level-1);return Math.max(50,t-s)}getNextFromBag(){if(this.bag.length===0){this.bag=["I","O","T","S","Z","J","L"];for(let e=this.bag.length-1;e>0;e--){const t=Math.floor(Math.random()*(e+1));[this.bag[e],this.bag[t]]=[this.bag[t],this.bag[e]]}}return this.bag.pop()}spawnPiece(){const e=this.nextPieces.shift();this.nextPieces.push(this.getNextFromBag());const t=v[e].shape,s=v[e].color;this.currentPiece={type:e,shape:t,color:s,x:Math.floor((h.BOARD_WIDTH-t[0].length)/2),y:0,rotation:0},this.isValidPosition(this.currentPiece.x,this.currentPiece.y,t)||this.gameOver(),this.canHold=!0,this.dropTimer=0,this.lockTimer=0}isValidPosition(e,t,s){for(let i=0;i<s.length;i++)for(let a=0;a<s[i].length;a++)if(s[i][a]){const r=e+a,o=t+i;if(r<0||r>=h.BOARD_WIDTH||o>=h.BOARD_HEIGHT||o>=0&&this.board[o][r])return!1}return!0}moveLeft(){return!this.currentPiece||this.isPaused?!1:this.isValidPosition(this.currentPiece.x-1,this.currentPiece.y,this.currentPiece.shape)?(this.currentPiece.x--,this.lockTimer=0,!0):!1}moveRight(){return!this.currentPiece||this.isPaused?!1:this.isValidPosition(this.currentPiece.x+1,this.currentPiece.y,this.currentPiece.shape)?(this.currentPiece.x++,this.lockTimer=0,!0):!1}moveDown(){return!this.currentPiece||this.isPaused?!1:this.isValidPosition(this.currentPiece.x,this.currentPiece.y+1,this.currentPiece.shape)?(this.currentPiece.y++,this.score+=h.POINTS.SOFT_DROP,!0):!1}hardDrop(){if(!this.currentPiece||this.isPaused)return;let e=0;for(;this.isValidPosition(this.currentPiece.x,this.currentPiece.y+1,this.currentPiece.shape);)this.currentPiece.y++,e++;this.score+=e*h.POINTS.HARD_DROP,this.lockPiece(),this.playSound("drop")}rotate(e=!0){if(!this.currentPiece||this.isPaused)return!1;const t=this.rotateMatrix(this.currentPiece.shape,e);if(this.isValidPosition(this.currentPiece.x,this.currentPiece.y,t))return this.currentPiece.shape=t,this.currentPiece.rotation=(this.currentPiece.rotation+(e?1:3))%4,this.lockTimer=0,this.checkTSpin(),!0;const s=this.getWallKicks(this.currentPiece.type,this.currentPiece.rotation,e);for(const[i,a]of s)if(this.isValidPosition(this.currentPiece.x+i,this.currentPiece.y+a,t))return this.currentPiece.x+=i,this.currentPiece.y+=a,this.currentPiece.shape=t,this.currentPiece.rotation=(this.currentPiece.rotation+(e?1:3))%4,this.lockTimer=0,this.checkTSpin(),!0;return!1}rotateMatrix(e,t=!0){const s=e.length,i=Array(s).fill(null).map(()=>Array(s).fill(0));for(let a=0;a<s;a++)for(let r=0;r<s;r++)t?i[r][s-1-a]=e[a][r]:i[s-1-r][a]=e[a][r];return i}getWallKicks(e,t,s){return e==="I"?[[-1,0],[2,0],[-1,2],[2,-1]]:e==="O"?[]:[[-1,0],[1,0],[-1,-1],[1,-1],[0,1]]}checkTSpin(){if(this.currentPiece.type!=="T")return!1;const e=[[this.currentPiece.x-1,this.currentPiece.y-1],[this.currentPiece.x+1,this.currentPiece.y-1],[this.currentPiece.x-1,this.currentPiece.y+1],[this.currentPiece.x+1,this.currentPiece.y+1]];let t=0;for(const[s,i]of e)(s<0||s>=h.BOARD_WIDTH||i>=h.BOARD_HEIGHT||i>=0&&this.board[i][s])&&t++;return t>=3?(this.stats.tSpins++,!0):!1}hold(){if(!this.currentPiece||!this.canHold||this.isPaused)return;const e=this.currentPiece.type;if(this.holdPiece){const t=this.holdPiece;this.holdPiece=e;const s=v[t].shape,i=v[t].color;this.currentPiece={type:t,shape:s,color:i,x:Math.floor((h.BOARD_WIDTH-s[0].length)/2),y:0,rotation:0}}else this.holdPiece=e,this.spawnPiece();this.canHold=!1,this.renderer.renderHold()}lockPiece(){if(!this.currentPiece)return;const e=this.currentPiece.shape;for(let s=0;s<e.length;s++)for(let i=0;i<e[s].length;i++)if(e[s][i]){const a=this.currentPiece.y+s,r=this.currentPiece.x+i;a>=0&&(this.board[a][r]=this.currentPiece.color)}this.stats.piecesPlaced++;const t=this.clearLines();t>0?(this.updateScore(t),this.combo++,this.stats.maxCombo=Math.max(this.stats.maxCombo,this.combo)):this.combo=0,this.spawnPiece()}clearLines(){let e=0;for(let t=h.BOARD_HEIGHT-1;t>=0;t--)this.board[t].every(s=>s!==0)&&(this.board.splice(t,1),this.board.unshift(Array(h.BOARD_WIDTH).fill(0)),e++,t++);if(e>0){this.lines+=e;const t=Math.floor(this.lines/10)+1;t>this.level&&(this.level=t,this.playSound("levelUp")),e===4?this.playSound("tetris"):this.playSound("clear"),this.renderer.animateLineClear(e)}return e}updateScore(e){let t=0;switch(e){case 1:t=h.POINTS.SINGLE;break;case 2:t=h.POINTS.DOUBLE;break;case 3:t=h.POINTS.TRIPLE;break;case 4:t=h.POINTS.TETRIS;break}t*=this.level,this.combo>0&&(t+=h.POINTS.COMBO_MULTIPLIER*this.combo),this.score+=t,this.updateDisplay()}updateDisplay(){document.getElementById("score").textContent=this.score.toLocaleString(),document.getElementById("level").textContent=this.level,document.getElementById("lines").textContent=this.lines}pause(){if(!this.isPlaying||this.isGameOver)return;this.isPaused=!0;const e=document.getElementById("gameOverlay");e.style.display="flex",document.getElementById("overlayTitle").textContent="PAUSED",document.getElementById("overlayMessage").textContent="Press SPACE or ESC to continue"}resume(){this.isPaused=!1,document.getElementById("gameOverlay").style.display="none"}async gameOver(){this.isGameOver=!0,this.isPlaying=!1,this.stats.endTime=Date.now(),this.playSound("gameOver");const e=await this.highscores.submitScore({playerName:this.playerName,score:this.score,level:this.level,lines:this.lines,gameMode:this.gameMode,metadata:{piecesPlaced:this.stats.piecesPlaced,tSpins:this.stats.tSpins,maxCombo:this.stats.maxCombo,timeElapsed:this.stats.endTime-this.stats.startTime}});if(e.isHighscore){const t=document.getElementById("highscoreRank"),s=document.getElementById("rankNumber");t.style.display="flex",s.textContent=e.rank}else document.getElementById("highscoreRank").style.display="none";setTimeout(()=>this.showGameOverModal(),1e3)}playSound(e){}getGhostPosition(){if(!this.currentPiece)return null;let e=this.currentPiece.y;for(;this.isValidPosition(this.currentPiece.x,e+1,this.currentPiece.shape);)e++;return{x:this.currentPiece.x,y:e,shape:this.currentPiece.shape,color:this.currentPiece.color}}}window.addEventListener("DOMContentLoaded",async()=>{const m=new I,e=new S;await m.initialize(),await e.initialize(),window.game=m,window.highscores=e});
